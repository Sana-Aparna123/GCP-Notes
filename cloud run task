cloud RUN:
----------
Objectives
In this lab, you learn to:

Enable the Cloud Run API.
Create a simple Node.js application that can be deployed as a serverless, stateless container.
Containerize your application and upload to Artifact Registry.
Deploy a containerized application on Cloud Run.
Delete unneeded images to avoid incurring extra storage charges.

process:
---------
sudo mkdir nginx-app
sudo chmod 777 nginx-app
cd nginx-app

vi index.html
------------------
<!DOCTYPE html>
<html>
<head>
    <title>simple nginx apllication</title>
</head>
<body>
        <h1>Welcome to NGINX server!</h1>
</body>
</html>


vi DOckerfile
------------------

# Use the official Nginx image
FROM nginx:alpine

# Copy the custom HTML file to the default Nginx public directory
COPY index.html /usr/share/nginx/html/index.html

# Set default environment variable for Cloud Run's PORT
ENV PORT 8080

# Replace the port in the Nginx configuration with the $PORT variable
RUN sed -i 's/listen       80;/listen       8080;/' /etc/nginx/conf.d/default.conf

# Expose the port that Cloud Run expects
EXPOSE 8080

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]


gcloud init

gcloud config set project PROJECT_ID

gcloud auth configure-docker

export PROJECT_ID=gentle-complex-435405-u9

echo $PROJECT_ID

docker build -t gcr.io/PROJECT_ID/nginx-app:latest .

docker images

docker push gcr.io/PROJECT_ID/nginx-app:latest

gcloud container images list

gcloud container images list --repository=gcr.io/$PROJECT_ID

gcloud run deploy --image gcr.io/$PROJECT_ID/nginx-app:latest --platform managed --region us-central1 --allow-unauthenticated 

gcloud run services list

gcloud run services list --platform managed --region us-central1

gcloud run services describe my-service

gcloud run revisions describe my-service-00001-dlj --platform managed --region us-central1

gcloud run services delete my-service --region us-central1






 
  
