In this lab, you learn how to perform the following tasks:

Create a Cloud Storage bucket and place an image into it.
Create a Cloud SQL instance and configure it.
Connect to the Cloud SQL instance from a web server.
Use the image in the Cloud Storage bucket on a web page.



Task 2. Deploy a web server VM instance
In the Google Cloud console, on the Navigation menu (Navigation menu icon), click Compute Engine > VM instances.

Click Create Instance.

On the Create an Instance page, for Name, type bloghost

For Region and Zone, select the region and zone assigned by Qwiklabs.

For Machine type, accept the default.

For Boot disk, if the Image shown is not Debian GNU/Linux 12, click Change and select Debian GNU/Linux 11 (bullseye).

Leave the defaults for Identity and API access unmodified.

For Firewall, click Allow HTTP traffic.

Click Advanced options to open that section of the dialog.

Click Management to open that section of the dialog

Scroll down to the Automation section, and enter the following script as the value for Startup script:

startup script:
---------------------
apt-get update
apt-get install apache2 php php-mysql -y
service apache2 restart

Note: Be sure to supply that script as the value of the Startup script field. If you accidentally put it into another field, it won't be executed when the VM instance starts.
Leave the remaining settings as their defaults, and click Create.
Note: Instance can take about two minutes to launch and be fully available for use.


Task 3. Create a Cloud Storage bucket using the gcloud storage command line
All Cloud Storage bucket names must be globally unique. To ensure that your bucket name is unique, these instructions will guide you to give your bucket the same name as your Google Cloud project ID, which is also globally unique.

Cloud Storage buckets can be associated with either a region or a multi-region location: US, EU, or ASIA. In this activity, you associate your bucket with the multi-region closest to the region and zone that Qwiklabs or your instructor assigned you to.

On the Google Cloud console, on the top right toolbar, click the Activate Cloud Shell Activate Cloud Shell icon. If a dialog box appears, click Continue.

For convenience, enter your chosen location into an environment variable called LOCATION. Enter one of these commands:

export LOCATION=US

Or

export LOCATION=EU

Or

export LOCATION=ASIA

In Cloud Shell, the DEVSHELL_PROJECT_ID environment variable contains your project ID. Enter this command to make a bucket named after your project ID:
gcloud storage buckets create -l $LOCATION gs://my-bucket456

If prompted, click Authorize to continue.

Retrieve a banner image from a publicly accessible Cloud Storage location:
gcloud storage cp gs://bucket-new123/pexels-chevanon-1108099.jpg pexels-chevanon-1108099.jpg

Copy the banner image to your newly created Cloud Storage bucket:
gcloud storage cp pexels-chevanon-1108099.jpg gs://my-bucket456/pexels-chevanon-1108099.jpg

Modify the Access Control List of the object you just created so that it's readable by everyone:
gsutil acl ch -u allUsers:R gs://my-bucket456/pexels-chevanon-1108099.jpg



Task 4. Create the Cloud SQL instance
In the Google Cloud console, on the Navigation menu (Navigation menu icon), click SQL.

Click Create instance.

For Choose a database engine, select Choose MySQL.

For Choose a Cloud SQL edition, click Enterprise and then select Sandbox from the dropdown.

For Instance ID, type my-instance-for-cloud-storage-cloud-sql-db, and for Root password type a password of your choice.

Note: Choose a password that you remember. There's no need to obscure the password because you use mechanisms to connect that aren't open access to everyone.
Select Single zone and set the region and zone assigned by Qwiklabs.
Note: This is the same region and zone into which you launched the bloghost instance. The best performance is achieved by placing the client and the database close to each other.
Click Create Instance.
Note: Wait for the instance to finish deploying. It will take a few minutes.
Click the name of the instance,my-instance-for-cloud-storage-cloud-sql-db , to open its details page.

From the SQL instances details page, copy the Public IP address for your SQL instance to a text editor for use later in this lab.
public-ip:34.70.190.178

Click Users menu on the left-hand side, and then click Add User Account.

For User name, type my-instance-user

For Password, type a password of your choice. Make a note of it.
password:instance123


Click Add to add the user account in the database.

Note: Wait for the user to be created.

Click Connections menu on the left-hand side, and then click Networking tab.

Click Add a Network.

Note: If you're offered the choice between a Private IP connection and a Public IP connection, choose Public IP for purposes of this lab.
Note: The Add network button may be unavailable if the user account creation is not yet complete.
For Name, type my-instance-network

For Network, type the external IP address of your bloghost VM instance, followed by /32
external ip of my instance:34.70.190.178/32

The result will look like this:
34.70.190.178/32

Note: Be sure to use the external IP address of your VM instance followed by /32. Do not use the VM instance's internal IP address. Do not use the sample IP address shown here.
Click Done to finish defining the authorized network.

Click Save to save the configuration change.

Note: If the message appears like Another operation is in progress, wait for few minutes until you see the green check for my-instance-for-cloud-storage-cloud-sql-db to save the configuration.


Task 5. Configure an application in a Compute Engine instance to use Cloud SQL
On the Navigation menu (Navigation menu icon), click Compute Engine > VM instances.

In the VM instances list, click SSH in the row for your VM instance my-instance-for-cloud-storage-cloud-sql .

In your ssh session on bloghost, change your working directory to the document root of the web server:

cd /var/www/html

Use the nano text editor to edit a file called index.php:
sudo nano index.php

Paste the content below into the file:

html>
<head><title>Welcome to my excellent blog</title></head>
<body>
<h1>Welcome to my excellent blog</h1>
<?php
 $dbserver = 34.70.190.178;
$dbuser = my-instance-user;
$dbpassword = instance123;
// In a production blog, we would not store the MySQL
// password in the document root. Instead, we would store
//  it in a Secret Manger. For more information see
// https://cloud.google.com/sql/docs/postgres/use-secret-manager

 try {
  $conn = new PDO("mysql:host=$dbserver;dbname=mysql", $dbuser, $dbpassword);
  // set the PDO error mode to exception
  $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  echo "Connected successfully";
} catch(PDOException $e) {
  echo "Database connection failed:: " . $e->getMessage();
}

?>
</body></html>


Note: In a later step, you will insert your Cloud SQL instance's IP address and your database password into this file. For now, leave the file unmodified.
Press Ctrl+O, and then press Enter to save your edited file.

Press Ctrl+X to exit the nano text editor.

Restart the web server:

sudo service apache2 restart
Copied!
Open a new web browser tab and paste into the address bar your my-instance-for-cloud-storage-cloud-sql VM instance's external IP address followed by /index.php. The URL will look like this:
34.70.190.178/index.php


Task 6. Configure an application in a Compute Engine instance to use a Cloud Storage object
In the Google Cloud console, click Cloud Storage > Buckets.

Click the bucket that is named after your Google Cloud project.

In this bucket, there is an object called my-excellent-blog.png. Copy the URL behind the link icon that appears in that object's Public access column, or behind the words "Public link" if shown.

Note: If you see neither a link icon nor a "Public link", try refreshing the browser. If you still do not see a link icon, return to Cloud Shell and confirm that your attempt to change the object's Access Control list with the gsutil acl ch command was successful.
Return to your ssh session on your bloghost VM instance.

Enter this command to set your working directory to the document root of the web server:

cd /var/www/html

Use the nano text editor to edit index.php:
sudo nano index.php

Use the arrow keys to move the cursor to the line that contains the h1 element. Press Enter to open up a new, blank screen line, and then paste the URL you copied earlier into the line.

Paste this HTML markup immediately before the URL:

<img src='
Place a closing single quotation mark and a closing angle bracket at the end of the URL:
'>
The resulting line will look like this:
<html>
<head><title>Welcome to my excellent blog</title></head>
<body>
<h1>Welcome to my excellent blog</h1>
<img src='https://storage.googleapis.com/my-bucket456/pexels-chevanon-1108099.jpg'>
<?php
$dbserver = 34.70.190.178;
$dbuser = my-instance-user;
$dbpassword = instance123;
// In a production blog, we would not store the MySQL
// password in the document root. Instead, we would store
//  it in a Secret Manger. For more information see
// https://cloud.google.com/sql/docs/postgres/use-secret-manager

 try {
  $conn = new PDO("mysql:host=$dbserver;dbname=mysql", $dbuser, $dbpassword);
  // set the PDO error mode to exception
  $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
  echo "Connected successfully";
} catch(PDOException $e) {
  echo "Database connection failed:: " . $e->getMessage();
}

?>
</body></html>


The effect of these steps is to place the line containing <img src='...'> immediately before the line containing <h1>...</h1>

Note: Do not copy the URL shown here. Instead, copy the URL shown by the Storage browser in your own Cloud Platform project.
Press Ctrl+O, and then press Enter to save your edited file.

Press Ctrl+X to exit the nano text editor.

Restart the web server:

sudo service apache2 restart
Copied!
Return to the web browser tab in which you opened your my-instance-for-cloud-storage-cloud-sql VM instance's external IP address. When you load the page, its content now includes a banner image.
Congratulations!
In this lab, you configured a Cloud SQL instance and connected an application in a Compute Engine instance to it. You also worked with a Cloud Storage bucket.

End your lab
When you have completed your lab, click End Lab. Google Cloud Skills Boost removes the resources you’ve used and cleans the account for you.

You will be given an opportunity to rate the lab experience. Select the applicable number of stars, type a comment, and then click Submit.

The number of stars indicates the following:

1 star = Very dissatisfied
2 stars = Dissatisfied
3 stars = Neutral
4 stars = Satisfied
5 stars = Very satisfied
You can close the dialog box if you don't want to provide feedback.

For feedback, suggestions, or corrections, please use the Support tab.

Copyright 2022 Google LLC All rights reserved. Google and the Google logo are trademarks of Google LLC. All other company and product names may be trademarks of the respective companies with which they are associated.

More resources
Read the Google Cloud Platform documentation on Cloud SQL.

Read the Google Cloud Platform documentation on Cloud Storage.

827b33e18db55754.png






